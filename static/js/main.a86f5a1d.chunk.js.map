{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","assets/images/user.jpg","assets/images/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users2.js","utils/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersAPIContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormControls.js","components/common/FormsControls/FormControls.module.css","components/common/Preloader/Preloader.js","components/Users/Users.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getUnFollow","userId","delete","getFollow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","logIn","email","password","rememberMe","logOut","initialState","messages","id","message","dialogs","name","sendMessage","newMassegeBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Paginator","totalUsersCount","onPageChanged","page","prevPageText","nextPageText","firstPageText","lastPageText","activePage","itemsCountPerPage","totalItemsCount","onChange","itemClass","linkClass","User","user","followingInProgress","onUnFollow","onFollow","photo","src","photos","small","userPhoto","alt","followed","Button","disabled","some","variant","onClick","Users","users","props","map","key","updateObjectInArray","items","itemId","objPropName","newObjectProps","isFetching","onFollowSuccess","onUnFollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","filter","getUsersSuperSelector","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIContainer","pageNumber","this","Preloader","React","Component","compose","connect","bind","Header","header","loginBlock","isAuth","login","getlogOut","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","getlogIn","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","appPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","promise","Promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","hasError","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","style","preloader","value","maxLengthCreator","maxLength","minLengthCreator","minLength","posts","likesCount","profile","addPostActionCreator","newPostTextext","setStatus","setUserProfile","getUserStatus","newPostText","p","postId"],"mappings":"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","file":"static/js/main.a86f5a1d.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\n// let baseURL = 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '03747c73-73c7-4c3d-ac0e-45ed1bff5da9'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    getUnFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('obsolete method. Please use profilesAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n    \r\n}\r\n\r\nexport const profileAPI = {\r\n   \r\n    getProfile(userId){\r\n        \r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        \r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        \r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get('auth/me')\r\n    },\r\n    logIn(email, password, rememberMe = false){\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logOut(){\r\n        return instance.delete('auth/login')\r\n    },\r\n\r\n}\r\n\r\n\r\n// export const unFollowAPI = {\r\n//     getUnFollow(user) {\r\n//         return instance.delete(`follow/${user.id}`)\r\n//             .then(response => response.data)\r\n//     }\r\n// }\r\n\r\n// export const followAPI = {\r\n//     getFollow(user) {\r\n//         return instance.post(`follow/${user.id}`)\r\n//             .then(response => response.data)\r\n//     }\r\n// }","const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How is your it-kamasutra?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' },],\r\n\r\n\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrew' },\r\n        { id: 3, name: 'Sweta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Viktor' },\r\n        { id: 6, name: 'Valera' },]\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMassegeBody;\r\n                 return {\r\n                ...state,\r\n                messages:[...state.messages,{id: 6,message: body}],\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const sendMessage = (newMassegeBody) => ({type: ADD_MESSAGE, newMassegeBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Paginator_page__PpFlc\"};","module.exports = __webpack_public_path__ + \"static/media/user.a5086149.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.5dc7e10b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__vB-dD\",\"item\":\"Navbar_item__3pQsE\",\"active\":\"Navbar_active__sz8Ws\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>users</NavLink>\r\n        </div>\r\n         {/* <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>  */}\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport s from './Paginator.module.css'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\n\r\n\r\n\r\nconst Paginator = ({currentPage,pageSize,totalUsersCount,onPageChanged}) => {\r\n\r\n    return (\r\n        \r\n            <div className={s.page}>\r\n               \r\n                <Pagination\r\n                    prevPageText='prev'\r\n                    nextPageText='next'\r\n                    firstPageText='first'\r\n                    lastPageText='last'\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={pageSize}\r\n                    totalItemsCount={totalUsersCount}\r\n                    onChange={onPageChanged}\r\n                    itemClass=\"page-item\"\r\n                    linkClass=\"page-link\"\r\n                />\r\n\r\n\r\n           \r\n            \r\n            </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport s from './Users.module.css'\r\nimport userPhoto from './../../assets/images/user.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst User = ({user, followingInProgress, onUnFollow, onFollow}) => {\r\n\r\n    return (\r\n        <div >\r\n\r\n                    <span>\r\n                        <div className={s.photo}>\r\n                            <NavLink to={'/profile/' + user.id}><img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" /></NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress.some(id => id === user.id)} variant=\"danger\" onClick={() => {\r\n                                    onUnFollow(user.id)\r\n\r\n                                   \r\n                                }}>UNFOLLOW</Button> :\r\n                                <Button disabled={followingInProgress.some(id => id === user.id)} variant=\"success\" onClick={() => {\r\n                                    onFollow(user.id)\r\n\r\n                                   \r\n                                }}>FOLLOW</Button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                           \r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                )\r\n                }\r\n            \r\n    \r\n\r\n\r\n\r\nexport default User;","import React from 'react'\r\n// import { Button } from 'react-bootstrap'\r\nimport s from './Users.module.css'\r\n// import userPhoto from './../../assets/images/user.jpg'\r\n// import Pagination from \"react-js-pagination\";\r\n// import { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User'\r\n\r\n\r\n\r\nconst Users = ({ currentPage, pageSize, totalUsersCount, onPageChanged, users, ...props }) => {\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Paginator currentPage={currentPage} pageSize={pageSize}\r\n                totalUsersCount={totalUsersCount} onPageChanged={onPageChanged} />\r\n            {/* <div className={s.page}>\r\n               \r\n                <Pagination\r\n                    prevPageText='prev'\r\n                    nextPageText='next'\r\n                    firstPageText='first'\r\n                    lastPageText='last'\r\n                    activePage={props.currentPage}\r\n                    itemsCountPerPage={props.pageSize}\r\n                    totalItemsCount={props.totalUsersCount}\r\n                    onChange={props.onPageChanged}\r\n                    itemClass=\"page-item\"\r\n                    linkClass=\"page-link\"\r\n                />\r\n\r\n\r\n            </div> */}\r\n            <div className={s.users}>\r\n                {users.map((user) => <User user={user}\r\n                    key={user.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    onUnFollow={props.onUnFollow}\r\n                    onFollow={props.onFollow}\r\n                />\r\n\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName,newObjectProps) => {\r\n\r\n   return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return { ...user, ...newObjectProps }\r\n        }\r\n        return user;\r\n    })\r\n} ","\r\nimport { usersAPI } from './../api/api';\r\nimport { updateObjectInArray } from './../utils/object-helpers';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOTAL_COUNT = 'TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: true})\r\n                // users: state.users.map((user) => {\r\n                //     if (user.id === action.userId) {\r\n                //         return { ...user, followed: true }\r\n                //     }\r\n                //     return user;\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: false})\r\n                // users: state.users.map((user) => {\r\n                //     if (user.id === action.userId) {\r\n                //         return { ...user, followed: false }\r\n                //     }\r\n                //     return user;\r\n                // })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users] }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        case TOTAL_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const onFollowSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const onUnFollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const onSetUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalCount) => ({ type: TOTAL_COUNT, totalCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId })\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(onSetUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        \r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId,apiMethod,actionCreator ) => {\r\n    dispatch(toggleFollowingProgress(true,userId))\r\n        let data = await apiMethod(userId)\r\n            if (data.resultCode === 0) {\r\n                dispatch(actionCreator(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false,userId))\r\n}\r\n\r\nexport const onFollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        followUnfollowFlow(dispatch, userId,usersAPI.getFollow.bind(usersAPI),onFollowSuccess)\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const onUnFollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        followUnfollowFlow(dispatch, userId,usersAPI.getUnFollow.bind(usersAPI),onUnFollowSuccess)\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersAll = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// export const getUsersSelector = (state) => {\r\n//     return getUsersAll(state).filter(u => true);\r\n// }\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersAll,  (users) => {\r\n    return users.filter(u => true)\r\n    \r\n}) \r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react'\r\nimport Users from './Users2';\r\nimport { onUnFollow, onFollow,getUsers } from '../../redux/users-reducer';    \r\nimport { connect } from 'react-redux';\r\nimport Preloader from './../common/Preloader/Preloader';\r\n// import { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getCurrentPage, getFollowingInProgress, getTotalUsersCount, getIsFetching, getUsersSuperSelector } from './../../redux/users-selectors';\r\n\r\n\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let{currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let{pageSize} = this.props\r\n        // this.props.setCurrentPage(pageNumber)\r\n        this.props.getUsers(pageNumber, pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                onUnFollow={this.props.onUnFollow}\r\n                onFollow={this.props.onFollow}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                followingInProgress={this.props.followingInProgress}\r\n                \r\n            />}\r\n\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        \r\n        // users: getUsersAll(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {onFollow, onUnFollow, getUsers}),\r\n    // withAuthRedirect\r\n)(UsersAPIContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    \r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' alt=\"6\"/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>{props.login} - <button onClick={props.getlogOut}>Log out</button></div> : <NavLink to={'/login'}>login</NavLink>}\r\n            \r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n       let response = await authAPI.me();\r\n            if (response.data.resultCode === 0) {\r\n                let { id, email, login } = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        \r\n    }\r\n    \r\n}\r\nexport const getlogIn = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logIn(email, password, rememberMe);          \r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('login', {_error:message}))               \r\n            }\r\n        \r\n    }\r\n}\r\n\r\nexport const getlogOut = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logOut()          \r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {  getlogOut } from './../../redux/auth-reducer';\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    \r\n    \r\n\r\n    render(){\r\n    return <Header {...this.props}/>\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return{\r\n        isAuth:state.auth.isAuth,\r\n        login:state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{getlogOut})(HeaderContainer);","import React from 'react'\r\nimport s from './../common/FormsControls/FormControls.module.css'\r\nimport {  reduxForm } from 'redux-form'\r\nimport { Input, createField } from '../common/FormsControls/FormControls'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { connect } from 'react-redux';\r\nimport { getlogIn } from './../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          \r\n            {createField(\"Email\", \"email\",[required], Input )}\r\n            {createField(\"Password\", \"password\",[required], Input, {type:\"password\"} )}\r\n            {createField(null, \"rememberMe\",[], Input, {type:\"checkbox\"},  \"rememberMe\")}\r\n            {/* <div>\r\n                <Field placeholder={\"Email\"}\r\n                    validate={[required]}\r\n                    name={\"email\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} type={\"password\"}\r\n                    validate={[required]}\r\n                    name={\"password\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"}\r\n\r\n                    name={\"rememberMe\"} component={Input} /> remember me\r\n                </div> */}\r\n\r\n                {error && <div className={s.formSummaryError}>\r\n                {error}\r\n                </div>\r\n                }\r\n            <div>\r\n                <button >Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n\r\n        const { email, password, rememberMe } = formData\r\n        props.getlogIn(email, password, rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getlogIn })(Login);","\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    \r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n                \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: SET_INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData())\r\n\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    appPage: appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n            </Suspense>\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport UsersAPIContainer from './components/Users/UsersAPIContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n// import ProfileContainer from './components/Profile/ProfileInfo/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileInfo/ProfileContainer'));\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      // <Router>\n\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n\n\n        <div className=\"app-wrapper-content\">\n          <Switch>\n\n\n            <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer) } />\n\n            <Route path='/users' render={() => <UsersAPIContainer />} />\n            <Route path='/login' render={() => <Login />} />\n\n          </Switch>\n        </div>\n\n      </div>\n\n      /* // </Router> */\n\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.appPage.initialized\n  }\n}\n\n// export default compose(\n//   connect(mapStateToProps, {initializeApp}),\n//   withRouter\n// )(App)\nlet AppContainer = compose(\n  connect(mapStateToProps, { initializeApp }),\n  withRouter\n)(App)\n\nlet SamuraiJSApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default SamuraiJSApp;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import store from './redux/redux-store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { BrowserRouter } from 'react-router-dom';\n// import { Provider } from 'react-redux';\nimport SamuraiJSApp from './App';\n\n\n\n// let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <SamuraiJSApp />, document.getElementById('root'));\n\n// }\n// rerenderEntireTree();\n\n// store.subscribe(() => {\n    \n//       rerenderEntireTree();\n//      });\n\n// rerenderEntireTree(store.getState())\n\n// store.subscribe(() => {\n//     let state = store.getState()\n//     rerenderEntireTree(state)\n// })\n\nserviceWorker.unregister();","import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nconst FormControl = ({ input, meta:{touched,error }, ...props }) => {\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const { input, meta, ...restProps } = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, meta, ...restProps } = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                validate={validators}\r\n                name={name} component={component} {...props} />{text}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__25Aua\",\"error\":\"FormControls_error__3NT_P\",\"formSummaryError\":\"FormControls_formSummaryError__2N-lE\"};","import React from 'react'\r\nimport preloader from '../../../assets/images/preloader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return(\r\n        <div style={{'display':'flex', 'justifyContent':'center'}}>\r\n                                    <img src={preloader} alt=\"\"/></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__2_70v\",\"users\":\"Users_users__18TGW\"};","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required';\r\n    \r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if(value && value.length > maxLength ) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n    \r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n    if(value && value.length < minLength ) return `Min length is less than ${minLength} symbols`;\r\n\r\n    return undefined;\r\n    \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3q6QQ\",\"loginBlock\":\"Header_loginBlock__1A2vX\"};","import { usersAPI, profileAPI } from './../api/api';\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, How are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }],\r\n    profile: null,\r\n    status: ''\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPostText = action.newPostTextext;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: 5, message: newPostText, likesCount: 0 }],\r\n               \r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case DELETE_POST: {\r\n            return { ...state, \r\n                posts:state.posts.filter((p) => p.id !== action.postId) }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostTextext) => ({ type: ADD_POST , newPostTextext})\r\nexport const setUserProfileSuccess = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\n\r\n\r\n\r\nexport const setUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n\r\n            dispatch(setUserProfileSuccess(response.data));\r\n        \r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n       let response = await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setStatus(response.data));\r\n        \r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n            \r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        \r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}